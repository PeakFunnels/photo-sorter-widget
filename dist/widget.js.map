{"version":3,"file":"widget.js","sources":["../src/storage.js","../src/dir-walk.js","../src/utils.js","../src/grid-renderer.js","../src/main.js","../src/sidebar.js","../src/metadata.js"],"sourcesContent":["// src/storage.js\r\n\r\n/**\r\n * Open (or create) the IndexedDB database and object store.\r\n * @returns {Promise<IDBDatabase>}\r\n */\r\nexport async function openHandleDB() {\r\n  return new Promise((resolve, reject) => {\r\n    const req = indexedDB.open('file-sorter-db', 1);\r\n    req.onupgradeneeded = () => {\r\n      // Create an object store named \"handles\"\r\n      req.result.createObjectStore('handles');\r\n    };\r\n    req.onsuccess = () => resolve(req.result);\r\n    req.onerror = () => reject(req.error);\r\n  });\r\n}\r\n\r\n/**\r\n * Save the last-picked directory handle under key \"last\".\r\n * @param {FileSystemDirectoryHandle} handle\r\n * @returns {Promise<void>}\r\n */\r\nexport async function saveLastHandle(handle) {\r\n  const db = await openHandleDB();\r\n  const tx = db.transaction('handles', 'readwrite');\r\n  tx.objectStore('handles').put(handle, 'last');\r\n  return new Promise(resolve => {\r\n    tx.oncomplete = resolve;\r\n  });\r\n}\r\n\r\n/**\r\n * Retrieve the last-picked directory handle, or null if none.\r\n * @returns {Promise<FileSystemDirectoryHandle|null>}\r\n */\r\nexport async function getLastHandle() {\r\n  const db = await openHandleDB();\r\n  const tx = db.transaction('handles', 'readonly');\r\n  return new Promise(resolve => {\r\n    const req = tx.objectStore('handles').get('last');\r\n    req.onsuccess = () => resolve(req.result);\r\n    req.onerror = () => resolve(null);\r\n  });\r\n}\r\n","// src/dir-walk.js\r\n\r\n/**\r\n * Walk only the top level of `dir`, collecting file entries.\r\n * @param {FileSystemDirectoryHandle} dir\r\n * @returns {Promise<Array<{ name: string, handle: FileSystemFileHandle, date: number }>>}\r\n */\r\nexport async function walkRoot(dir) {\r\n  const arr = [];\r\n  for await (let [name, handle] of dir) {\r\n    if (handle.kind === 'file') {\r\n      const file = await handle.getFile();\r\n      arr.push({ name, handle, date: file.lastModified });\r\n    }\r\n  }\r\n  return arr;\r\n}\r\n\r\n/**\r\n * Recursively walk `dir` and all subdirectories, collecting file entries.\r\n * @param {FileSystemDirectoryHandle} dir\r\n * @param {Array} arr  Accumulator array (for internal use)\r\n * @returns {Promise<Array<{ name: string, handle: FileSystemFileHandle, date: number }>>}\r\n */\r\nexport async function walkRecursive(dir, arr = []) {\r\n  for await (let [name, handle] of dir) {\r\n    if (handle.kind === 'file') {\r\n      const file = await handle.getFile();\r\n      arr.push({ name, handle, date: file.lastModified });\r\n    } else if (handle.kind === 'directory') {\r\n      await walkRecursive(handle, arr);\r\n    }\r\n  }\r\n  return arr;\r\n}\r\n","// src/utils.js\r\nexport const IMAGE_EXTS = ['.jpg', '.jpeg', '.png', '.gif', '.bmp', '.webp', '.tiff'];\r\nexport const VIDEO_EXTS = ['.mp4', '.mov', '.webm'];\r\nexport const BATCH_SIZE = 30;\r\n","// src/grid-renderer.js\r\n\r\nimport { BATCH_SIZE, IMAGE_EXTS, VIDEO_EXTS } from './utils.js';\r\n\r\nlet observer;\r\nlet loaded = 0;\r\nlet displayed = [];\r\n\r\n/**\r\n * Initialize the IntersectionObserver on the thumbnail grid.\r\n */\r\nexport function initObserver(gridEl, generateThumbFn) {\r\n  observer = new IntersectionObserver(entries => {\r\n    for (let entry of entries) {\r\n      if (entry.isIntersecting && !entry.target._loaded) {\r\n        generateThumbFn(entry.target._handle, entry.target);\r\n        entry.target._loaded = true;\r\n        observer.unobserve(entry.target);\r\n      }\r\n    }\r\n  }, { root: gridEl, rootMargin: '200px' });\r\n}\r\n\r\n/**\r\n * Filter and sort your file list.\r\n */\r\nexport function applyFilters(allFiles, searchQuery, mediaFilterValue, sortValue) {\r\n  let list = [...allFiles];\r\n  const q = searchQuery.trim().toLowerCase();\r\n  if (q) list = list.filter(f => f.name.toLowerCase().includes(q));\r\n  if (mediaFilterValue !== 'all') {\r\n    list = list.filter(f => {\r\n      const ext = f.name.slice(f.name.lastIndexOf('.')).toLowerCase();\r\n      return mediaFilterValue === 'photos'\r\n        ? IMAGE_EXTS.includes(ext)\r\n        : VIDEO_EXTS.includes(ext);\r\n    });\r\n  }\r\n  if (sortValue === 'alpha') {\r\n    list.sort((a, b) => a.name.localeCompare(b.name));\r\n  } else {\r\n    list.sort((a, b) => b.date - a.date);\r\n  }\r\n  return list;\r\n}\r\n\r\n/**\r\n * Clear and reset the grid.\r\n */\r\nexport function resetGrid(container, allFiles, searchQuery, mediaFilterValue, sortValue) {\r\n  container.innerHTML = '';\r\n  loaded = 0;\r\n  displayed = applyFilters(allFiles, searchQuery, mediaFilterValue, sortValue);\r\n  loadMore(container);\r\n}\r\n\r\n/**\r\n * Load the next batch of thumbnails, with actions, selection, and drag.\r\n */\r\nexport async function loadMore(container) {\r\n  const slice = displayed.slice(loaded, loaded + BATCH_SIZE);\r\n  for (let f of slice) {\r\n    const cell = document.createElement('div');\r\n    cell.className = 'thumb';\r\n    cell._handle = f.handle;\r\n    cell._filename = f.name;\r\n\r\n    // Placeholder icon\r\n    const ph = document.createElement('div');\r\n    ph.className = 'icon'; ph.textContent = '…';\r\n    cell.appendChild(ph);\r\n\r\n    // Actions container\r\n    const acts = document.createElement('div');\r\n    acts.className = 'actions';\r\n\r\n    const ext = f.name.slice(f.name.lastIndexOf('.')).toLowerCase();\r\n\r\n    // Rename\r\n    const renameBtn = document.createElement('button');\r\n    renameBtn.textContent = '✎'; renameBtn.title = 'Rename';\r\n    renameBtn.onclick = async e => {\r\n      e.stopPropagation();\r\n      const base = prompt('Rename to:', f.name.replace(ext, ''));\r\n      if (!base) return;\r\n      const nm = base.endsWith(ext) ? base : base + ext;\r\n      const file = await f.handle.getFile();\r\n      const nh = await currentHandle.getFileHandle(nm, { create: true });\r\n      const w  = await nh.createWritable();\r\n      await w.write(file); await w.close();\r\n      await currentHandle.removeEntry(f.name);\r\n      await loadRootFiles();\r\n    };\r\n    acts.appendChild(renameBtn);\r\n\r\n    // Delete\r\n    const delBtn = document.createElement('button');\r\n    delBtn.textContent = '🗑'; delBtn.title = 'Delete';\r\n    delBtn.onclick = async e => {\r\n      e.stopPropagation();\r\n      if (!confirm(`Delete ${f.name}?`)) return;\r\n      await currentHandle.removeEntry(f.name);\r\n      await loadRootFiles();\r\n    };\r\n    acts.appendChild(delBtn);\r\n\r\n    // Metadata\r\n    const infoBtn = document.createElement('button');\r\n    infoBtn.textContent = 'ℹ️'; infoBtn.title = 'Metadata';\r\n    acts.appendChild(infoBtn);\r\n\r\n    // Open\r\n    const openBtn = document.createElement('button');\r\n    openBtn.textContent = VIDEO_EXTS.includes(ext) ? '▶️' : '🔍';\r\n    openBtn.title = 'Open';\r\n    openBtn.onclick = async e => {\r\n      e.stopPropagation();\r\n      const file = await f.handle.getFile();\r\n      const url = URL.createObjectURL(file);\r\n      window.open(url, '_blank');\r\n    };\r\n    acts.appendChild(openBtn);\r\n\r\n    cell.appendChild(acts);\r\n\r\n    // Label\r\n    const lbl = document.createElement('div');\r\n    lbl.className = 'name'; lbl.textContent = f.name;\r\n    cell.appendChild(lbl);\r\n\r\n    // Selection\r\n    cell.onclick = e => {\r\n      e.preventDefault();\r\n      if (e.ctrlKey || e.metaKey) {\r\n        if (selected.has(f)) {\r\n          selected.delete(f);\r\n          cell.classList.remove('selected');\r\n        } else {\r\n          selected.add(f);\r\n          cell.classList.add('selected');\r\n        }\r\n      } else {\r\n        container.querySelectorAll('.thumb.selected').forEach(x => x.classList.remove('selected'));\r\n        selected.clear();\r\n        selected.add(f);\r\n        cell.classList.add('selected');\r\n      }\r\n    };\r\n\r\n    // Drag start uses text/plain\r\n    cell.draggable = true;\r\n    cell.ondragstart = e => {\r\n      const names = selected.has(f)\r\n        ? Array.from(selected).map(x => x.name)\r\n        : [f.name];\r\n      const payload = JSON.stringify(names);\r\n      e.dataTransfer.setData('text/plain', payload);\r\n    };\r\n\r\n    container.appendChild(cell);\r\n    observer.observe(cell);\r\n  }\r\n  loaded += slice.length;\r\n}\r\n\r\n/**\r\n * Generate an actual thumbnail image or fallback icon.\r\n */\r\nexport async function generateThumb(handle, cell) {\r\n  const file = await handle.getFile();\r\n  const size = parseInt(getComputedStyle(cell).getPropertyValue('--thumb'));\r\n  const url  = URL.createObjectURL(file);\r\n  const probe = document.createElement('video');\r\n  const canPlay = probe.canPlayType(file.type) !== '';\r\n\r\n  if (file.type.startsWith('video/') && canPlay) {\r\n    probe.preload = 'metadata'; probe.muted = true; probe.src = url; probe.currentTime = 0.5;\r\n    probe.onseeked = async () => {\r\n      const bm = await createImageBitmap(probe, { resizeWidth: size, resizeHeight: size, resizeQuality: 'high' });\r\n      const cnv = document.createElement('canvas'); cnv.width = cnv.height = size;\r\n      cnv.getContext('2d').drawImage(bm, 0, 0);\r\n      const img = document.createElement('img'); img.src = cnv.toDataURL('image/jpeg', 0.75);\r\n      cell.replaceChild(img, cell.querySelector('.icon'));\r\n    };\r\n  } else if (file.type.startsWith('image/')) {\r\n    const img = new Image(); img.src = url;\r\n    img.onload = async () => {\r\n      const bm = await createImageBitmap(img, { resizeWidth: size, resizeHeight: size, resizeQuality: 'high' });\r\n      const cnv = document.createElement('canvas'); cnv.width = cnv.height = size;\r\n      cnv.getContext('2d').drawImage(bm, 0, 0);\r\n      const thumb = document.createElement('img'); thumb.src = cnv.toDataURL('image/jpeg', 0.75);\r\n      cell.replaceChild(thumb, cell.querySelector('.icon'));\r\n    };\r\n  } else if (file.type.startsWith('video/')) {\r\n    const icon = document.createElement('div'); icon.className = 'icon'; icon.textContent = '🎥';\r\n    cell.replaceChild(icon, cell.querySelector('.icon'));\r\n  } else {\r\n    const icon = document.createElement('div'); icon.className = 'icon'; icon.textContent = '📄';\r\n    cell.replaceChild(icon, cell.querySelector('.icon'));\r\n  }\r\n}\r\n","// src/main.js\r\n\r\nimport { getLastHandle, saveLastHandle } from './storage.js';\r\nimport { walkRoot, walkRecursive } from './dir-walk.js';\r\nimport { initObserver, resetGrid, loadMore, generateThumb } from './grid-renderer.js';\r\nimport { loadAlbums, renderAlbums } from './sidebar.js';\r\nimport { showMetadata } from './metadata.js';\r\n\r\n// DOM refs\r\nconst pickBtn     = document.getElementById('pickBtn');\r\nconst refreshBtn  = document.getElementById('refreshBtn');\r\nconst searchInput = document.getElementById('searchInput');\r\nconst mediaFilter = document.getElementById('mediaFilter');\r\nconst sortSelect  = document.getElementById('sortSelect');\r\nconst includeSub  = document.getElementById('includeSub');\r\nconst thumbGrid   = document.getElementById('thumbGrid');\r\nconst tree        = document.getElementById('tree');\r\nconst addAlbum    = document.getElementById('addCat');\r\nconst navRoot     = document.querySelector('.nav-item[data-type=\"root\"]');\r\nconst breadcrumb  = document.getElementById('breadcrumb');\r\nconst metaModal   = document.getElementById('metaModal');\r\nconst metaClose   = metaModal.querySelector('.close');\r\n\r\nlet rootDir, currentHandle, allFiles = [], selected = new Set();\r\n\r\n// 1) Lazy-load observer\r\ninitObserver(thumbGrid, generateThumb);\r\n\r\n// 2) Infinite scroll\r\nthumbGrid.addEventListener('scroll', () => {\r\n  if (thumbGrid.scrollTop + thumbGrid.clientHeight >= thumbGrid.scrollHeight - 100) {\r\n    loadMore(thumbGrid);\r\n  }\r\n});\r\n\r\n// 3) Active nav highlight\r\nfunction setActiveNav(el) {\r\n  document.querySelectorAll('.nav-item, .group').forEach(x => x.classList.remove('active'));\r\n  el.classList.add('active');\r\n}\r\n\r\n// 4) Breadcrumb\r\nfunction updateBreadcrumb(cat, grp) {\r\n  breadcrumb.textContent = !cat\r\n    ? 'Home'\r\n    : !grp\r\n      ? `Home / ${cat}`\r\n      : `Home / ${cat} / ${grp}`;\r\n}\r\n\r\n// 5) Load files\r\nasync function loadRootFiles() {\r\n  allFiles = includeSub.checked\r\n    ? await walkRecursive(currentHandle)\r\n    : await walkRoot(currentHandle);\r\n\r\n  resetGrid(\r\n    thumbGrid,\r\n    allFiles,\r\n    searchInput.value,\r\n    mediaFilter.value,\r\n    sortSelect.value\r\n  );\r\n  updateBreadcrumb();\r\n  refreshBtn.disabled = false;\r\n}\r\n\r\n// 6) Sidebar init\r\nasync function initSidebar() {\r\n  const albums = await loadAlbums(rootDir);\r\n  renderAlbums(tree, albums,\r\n    // onGroupClick with reliable clickedElement\r\n    async (albumHandle, groupName, clickedEl) => {\r\n      setActiveNav(clickedEl);\r\n      currentHandle = await albumHandle.getDirectoryHandle(groupName);\r\n      updateBreadcrumb(albumHandle.name, groupName);\r\n      await loadRootFiles();\r\n    },\r\n    // onGroupDrop reading text/plain\r\n    async (eventOrSignal, albumHandle, groupName) => {\r\n      if (eventOrSignal === 'reload') {\r\n        return await initSidebar();\r\n      }\r\n      const raw = eventOrSignal.dataTransfer.getData('text/plain');\r\n      if (!raw) return;\r\n      const names = JSON.parse(raw);\r\n      let moved = 0, failed = 0;\r\n      for (const nm of names) {\r\n        try {\r\n          const ent = allFiles.find(f => f.name === nm);\r\n          const blob = await ent.handle.getFile();\r\n          const tgt = await albumHandle.getDirectoryHandle(groupName, { create: true });\r\n          const fileH = await tgt.getFileHandle(nm, { create: true });\r\n          const w = await fileH.createWritable();\r\n          await w.write(blob); await w.close();\r\n          await currentHandle.removeEntry(nm);\r\n          moved++;\r\n        } catch {\r\n          failed++;\r\n        }\r\n      }\r\n      alert(`Moved ${moved} file${moved !== 1 ? 's' : ''}${failed ? `, ${failed} failed` : ''}.`);\r\n      await loadRootFiles();\r\n    }\r\n  );\r\n}\r\n\r\n// 7) Pick folder\r\npickBtn.onclick = async () => {\r\n  rootDir = await window.showDirectoryPicker();\r\n  await saveLastHandle(rootDir);\r\n  currentHandle = rootDir;\r\n  await loadRootFiles();\r\n  await initSidebar();\r\n  setActiveNav(navRoot);\r\n};\r\n\r\n// 8) Add album\r\naddAlbum.onclick = async () => {\r\n  const nm = prompt('New Album:');\r\n  if (!nm) return;\r\n  await rootDir.getDirectoryHandle(nm, { create: true });\r\n  await initSidebar();\r\n};\r\n\r\n// 9) Filters\r\nrefreshBtn.onclick = loadRootFiles;\r\nsearchInput.oninput   = loadRootFiles;\r\nmediaFilter.onchange  = loadRootFiles;\r\nsortSelect.onchange   = loadRootFiles;\r\nincludeSub.onchange   = loadRootFiles;\r\n\r\n// 10) Metadata delegate\r\nthumbGrid.addEventListener('click', e => {\r\n  if (e.target.matches('.thumb .actions button[title=\"Metadata\"]')) {\r\n    const cell = e.target.closest('.thumb');\r\n    const entry = allFiles.find(f => f.name === cell._filename);\r\n    showMetadata(entry, metaModal);\r\n  }\r\n});\r\n\r\n// 11) Close modal\r\nmetaClose.onclick = () => metaModal.style.display = 'none';\r\n\r\n// 12) On load\r\nwindow.addEventListener('load', async () => {\r\n  const last = await getLastHandle();\r\n  rootDir = last || await window.showDirectoryPicker({ startIn: 'downloads' });\r\n  if (!last) await saveLastHandle(rootDir);\r\n  currentHandle = rootDir;\r\n\r\n  await loadRootFiles();\r\n  await initSidebar();\r\n  setActiveNav(navRoot);\r\n});\r\n","// src/sidebar.js\r\n\r\n/**\r\n * Scan the root directory for albums and their sub-groups.\r\n */\r\nexport async function loadAlbums(rootDir) {\r\n  const albums = [];\r\n  for await (let [name, handle] of rootDir) {\r\n    if (handle.kind === 'directory') {\r\n      const groups = [];\r\n      for await (let [gName, gHandle] of handle) {\r\n        if (gHandle.kind === 'directory') groups.push(gName);\r\n      }\r\n      albums.push({ name, handle, groups });\r\n    }\r\n  }\r\n  return albums;\r\n}\r\n\r\n/**\r\n * Render albums & groups into the sidebar.\r\n * onGroupClick(albumHandle, groupName, clickedElement)\r\n * onGroupDrop(event, albumHandle, groupName)\r\n */\r\nexport function renderAlbums(container, albums, onGroupClick, onGroupDrop) {\r\n  container.innerHTML = '';\r\n  albums.forEach(album => {\r\n    const cat = document.createElement('div');\r\n    cat.className = 'category';\r\n\r\n    const hdr = document.createElement('div');\r\n    hdr.className = 'cat-header';\r\n    hdr.textContent = album.name;\r\n    const add = document.createElement('button');\r\n    add.textContent = '➕';\r\n    add.onclick = async () => {\r\n      const nm = prompt('New Group:');\r\n      if (!nm) return;\r\n      await album.handle.getDirectoryHandle(nm, { create: true });\r\n      onGroupDrop('reload');\r\n    };\r\n    hdr.appendChild(add);\r\n    cat.appendChild(hdr);\r\n\r\n    album.groups.forEach(grpName => {\r\n      const grp = document.createElement('div');\r\n      grp.className = 'group';\r\n      grp.textContent = grpName;\r\n\r\n      // when clicked, pass itself as clickedElement\r\n      grp.onclick = () => onGroupClick(album.handle, grpName, grp);\r\n\r\n      grp.addEventListener('dragover', e => {\r\n        e.preventDefault(); grp.classList.add('dragover');\r\n      });\r\n      grp.addEventListener('dragleave', () => grp.classList.remove('dragover'));\r\n      grp.addEventListener('drop', e => {\r\n        e.preventDefault(); grp.classList.remove('dragover');\r\n        onGroupDrop(e, album.handle, grpName);\r\n      });\r\n\r\n      cat.appendChild(grp);\r\n    });\r\n\r\n    container.appendChild(cat);\r\n  });\r\n}\r\n","// src/metadata.js\r\n\r\n/**\r\n * Display metadata for a given file entry in a modal.\r\n * Supports images via EXIF and videos via built-in metadata.\r\n * @param {{ name: string, handle: FileSystemFileHandle }} fileEntry\r\n * @param {HTMLElement} modalElement The modal container (#metaModal)\r\n */\r\nexport async function showMetadata(fileEntry, modalElement) {\r\n  const { name, handle } = fileEntry;\r\n  const file = await handle.getFile();\r\n  let tags = {};\r\n\r\n  // Extract EXIF tags for images\r\n  if (file.type.startsWith('image/') && window.EXIF) {\r\n    await new Promise(resolve => {\r\n      EXIF.getData(file, function() {\r\n        tags = EXIF.getAllTags(this);\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  // Build ordered metadata\r\n  const data = {};\r\n  data['File Name'] = name;\r\n  // Original date from EXIF if available\r\n  if (tags.DateTimeOriginal) {\r\n    data['Original Date'] = tags.DateTimeOriginal;\r\n  }\r\n  // Camera make/model if available\r\n  if (tags.Make || tags.Model) {\r\n    data['Camera'] = [tags.Make, tags.Model].filter(Boolean).join(' ');\r\n  }\r\n  // Video metadata or fallback\r\n  if (file.type.startsWith('video/')) {\r\n    const url = URL.createObjectURL(file);\r\n    const vid = document.createElement('video');\r\n    vid.preload = 'metadata';\r\n    vid.src = url;\r\n    await new Promise(resolve => {\r\n      vid.onloadedmetadata = () => {\r\n        data['Duration'] = `${vid.duration.toFixed(2)} s`;\r\n        data['Width'] = vid.videoWidth;\r\n        data['Height'] = vid.videoHeight;\r\n        resolve();\r\n      };\r\n    });\r\n  }\r\n\r\n  // Common fields\r\n  data['Size'] = `${file.size} bytes`;\r\n  data['Type'] = file.type;\r\n  data['Last Modified'] = new Date(file.lastModified).toLocaleString();\r\n\r\n  renderMetaModal(data, modalElement);\r\n}\r\n"],"names":["async","openHandleDB","Promise","resolve","reject","req","indexedDB","open","onupgradeneeded","result","createObjectStore","onsuccess","onerror","error","saveLastHandle","handle","tx","transaction","objectStore","put","oncomplete","walkRecursive","dir","arr","name","kind","file","getFile","push","date","lastModified","IMAGE_EXTS","VIDEO_EXTS","observer","loaded","displayed","resetGrid","container","allFiles","searchQuery","mediaFilterValue","sortValue","innerHTML","list","q","trim","toLowerCase","filter","f","includes","ext","slice","lastIndexOf","sort","a","b","localeCompare","applyFilters","loadMore","cell","document","createElement","className","_handle","_filename","ph","textContent","appendChild","acts","renameBtn","title","onclick","e","stopPropagation","base","prompt","replace","nm","endsWith","nh","currentHandle","getFileHandle","create","w","createWritable","write","close","removeEntry","loadRootFiles","delBtn","confirm","infoBtn","openBtn","url","URL","createObjectURL","window","lbl","preventDefault","ctrlKey","metaKey","selected","has","delete","classList","remove","add","querySelectorAll","forEach","x","clear","draggable","ondragstart","names","Array","from","map","payload","JSON","stringify","dataTransfer","setData","observe","length","pickBtn","getElementById","refreshBtn","searchInput","mediaFilter","sortSelect","includeSub","thumbGrid","tree","addAlbum","navRoot","querySelector","breadcrumb","metaModal","metaClose","rootDir","generateThumbFn","setActiveNav","el","updateBreadcrumb","cat","grp","checked","walkRoot","value","disabled","initSidebar","albums","groups","gName","gHandle","loadAlbums","onGroupClick","onGroupDrop","album","hdr","getDirectoryHandle","grpName","addEventListener","renderAlbums","albumHandle","groupName","clickedEl","eventOrSignal","raw","getData","parse","moved","failed","ent","find","blob","tgt","fileH","alert","size","parseInt","getComputedStyle","getPropertyValue","probe","canPlay","canPlayType","type","startsWith","preload","muted","src","currentTime","onseeked","bm","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","cnv","width","height","getContext","drawImage","img","toDataURL","replaceChild","Image","onload","thumb","icon","IntersectionObserver","entries","entry","isIntersecting","target","_loaded","unobserve","root","rootMargin","scrollTop","clientHeight","scrollHeight","showDirectoryPicker","oninput","onchange","matches","closest","fileEntry","modalElement","tags","EXIF","getAllTags","this","data","DateTimeOriginal","Make","Model","Boolean","join","vid","onloadedmetadata","duration","toFixed","videoWidth","videoHeight","Date","toLocaleString","renderMetaModal","showMetadata","style","display","last","get","getLastHandle","startIn"],"mappings":"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"}