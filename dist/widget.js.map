{"version":3,"file":"widget.js","sources":["../src/storage.js","../src/dir-walk.js","../src/utils.js","../src/grid-renderer.js","../src/main.js","../src/sidebar.js","../src/metadata.js"],"sourcesContent":["// src/storage.js\r\n\r\n/**\r\n * Open (or create) the IndexedDB database and object store.\r\n * @returns {Promise<IDBDatabase>}\r\n */\r\nexport async function openHandleDB() {\r\n  return new Promise((resolve, reject) => {\r\n    const req = indexedDB.open('file-sorter-db', 1);\r\n    req.onupgradeneeded = () => {\r\n      // Create an object store named \"handles\"\r\n      req.result.createObjectStore('handles');\r\n    };\r\n    req.onsuccess = () => resolve(req.result);\r\n    req.onerror = () => reject(req.error);\r\n  });\r\n}\r\n\r\n/**\r\n * Save the last-picked directory handle under key \"last\".\r\n * @param {FileSystemDirectoryHandle} handle\r\n * @returns {Promise<void>}\r\n */\r\nexport async function saveLastHandle(handle) {\r\n  const db = await openHandleDB();\r\n  const tx = db.transaction('handles', 'readwrite');\r\n  tx.objectStore('handles').put(handle, 'last');\r\n  return new Promise(resolve => {\r\n    tx.oncomplete = resolve;\r\n  });\r\n}\r\n\r\n/**\r\n * Retrieve the last-picked directory handle, or null if none.\r\n * @returns {Promise<FileSystemDirectoryHandle|null>}\r\n */\r\nexport async function getLastHandle() {\r\n  const db = await openHandleDB();\r\n  const tx = db.transaction('handles', 'readonly');\r\n  return new Promise(resolve => {\r\n    const req = tx.objectStore('handles').get('last');\r\n    req.onsuccess = () => resolve(req.result);\r\n    req.onerror = () => resolve(null);\r\n  });\r\n}\r\n","// src/dir-walk.js\r\n\r\n/**\r\n * Walk only the top level of `dir`, collecting file entries.\r\n * @param {FileSystemDirectoryHandle} dir\r\n * @returns {Promise<Array<{ name: string, handle: FileSystemFileHandle, date: number }>>}\r\n */\r\nexport async function walkRoot(dir) {\r\n  const arr = [];\r\n  for await (let [name, handle] of dir) {\r\n    if (handle.kind === 'file') {\r\n      const file = await handle.getFile();\r\n      arr.push({ name, handle, date: file.lastModified });\r\n    }\r\n  }\r\n  return arr;\r\n}\r\n\r\n/**\r\n * Recursively walk `dir` and all subdirectories, collecting file entries.\r\n * @param {FileSystemDirectoryHandle} dir\r\n * @param {Array} arr  Accumulator array (for internal use)\r\n * @returns {Promise<Array<{ name: string, handle: FileSystemFileHandle, date: number }>>}\r\n */\r\nexport async function walkRecursive(dir, arr = []) {\r\n  for await (let [name, handle] of dir) {\r\n    if (handle.kind === 'file') {\r\n      const file = await handle.getFile();\r\n      arr.push({ name, handle, date: file.lastModified });\r\n    } else if (handle.kind === 'directory') {\r\n      await walkRecursive(handle, arr);\r\n    }\r\n  }\r\n  return arr;\r\n}\r\n","// src/utils.js\r\nexport const IMAGE_EXTS = ['.jpg', '.jpeg', '.png', '.gif', '.bmp', '.webp', '.tiff'];\r\nexport const VIDEO_EXTS = ['.mp4', '.mov', '.webm'];\r\nexport const BATCH_SIZE = 30;\r\n","// src/grid-renderer.js\r\n\r\nimport { BATCH_SIZE, IMAGE_EXTS, VIDEO_EXTS } from './utils.js';\r\n\r\nlet observer;\r\nlet loaded = 0;\r\nlet displayed = [];\r\n\r\n/**\r\n * Initialize the IntersectionObserver on the thumb grid.\r\n * @param {HTMLElement} gridEl  The container element for thumbnails.\r\n * @param {Function} generateThumbFn  Function that takes (fileHandle, cell) and generates the thumb.\r\n */\r\nexport function initObserver(gridEl, generateThumbFn) {\r\n  observer = new IntersectionObserver(entries => {\r\n    for (let e of entries) {\r\n      if (e.isIntersecting && !e.target._loaded) {\r\n        generateThumbFn(e.target._handle, e.target);\r\n        e.target._loaded = true;\r\n        observer.unobserve(e.target);\r\n      }\r\n    }\r\n  }, { root: gridEl, rootMargin: '200px' });\r\n}\r\n\r\n/**\r\n * Apply search, media‐type filter, and sort to the full file list.\r\n * @param {Array} allFiles\r\n * @param {string} searchQuery\r\n * @param {string} mediaFilterValue  'all'|'photos'|'videos'\r\n * @param {string} sortValue  'alpha'|'date'\r\n * @returns {Array} filtered & sorted list\r\n */\r\nexport function applyFilters(allFiles, searchQuery, mediaFilterValue, sortValue) {\r\n  let list = [...allFiles];\r\n  const q = searchQuery.trim().toLowerCase();\r\n  if (q) {\r\n    list = list.filter(f => f.name.toLowerCase().includes(q));\r\n  }\r\n  if (mediaFilterValue !== 'all') {\r\n    list = list.filter(f => {\r\n      const ext = f.name.slice(f.name.lastIndexOf('.')).toLowerCase();\r\n      return mediaFilterValue === 'photos'\r\n        ? IMAGE_EXTS.includes(ext)\r\n        : VIDEO_EXTS.includes(ext);\r\n    });\r\n  }\r\n  if (sortValue === 'alpha') {\r\n    list.sort((a, b) => a.name.localeCompare(b.name));\r\n  } else {\r\n    list.sort((a, b) => b.date - a.date);\r\n  }\r\n  return list;\r\n}\r\n\r\n/**\r\n * Reset the grid: clear, reapply filters, and load the first batch.\r\n * @param {HTMLElement} container  The thumbGrid element.\r\n * @param {Array} allFiles\r\n * @param {string} searchQuery\r\n * @param {string} mediaFilterValue\r\n * @param {string} sortValue\r\n */\r\nexport function resetGrid(container, allFiles, searchQuery, mediaFilterValue, sortValue) {\r\n  container.innerHTML = '';\r\n  loaded = 0;\r\n  displayed = applyFilters(allFiles, searchQuery, mediaFilterValue, sortValue);\r\n  loadMore(container);\r\n}\r\n\r\n/**\r\n * Load the next batch of thumbnails into the container.\r\n * @param {HTMLElement} container\r\n */\r\nexport async function loadMore(container) {\r\n  const slice = displayed.slice(loaded, loaded + BATCH_SIZE);\r\n  for (let f of slice) {\r\n    const cell = document.createElement('div');\r\n    cell.className = 'thumb';\r\n    cell._handle = f.handle;\r\n    cell._filename = f.name;\r\n\r\n    // placeholder icon\r\n    const ph = document.createElement('div');\r\n    ph.className = 'icon';\r\n    ph.textContent = '…';\r\n    cell.appendChild(ph);\r\n\r\n    // label\r\n    const lbl = document.createElement('div');\r\n    lbl.className = 'name';\r\n    lbl.textContent = f.name;\r\n    cell.appendChild(lbl);\r\n\r\n    container.appendChild(cell);\r\n    observer.observe(cell);\r\n  }\r\n  loaded += slice.length;\r\n}\r\n\r\n/**\r\n * Generate a thumbnail or fallback icon inside the cell.\r\n * @param {FileSystemFileHandle} handle\r\n * @param {HTMLElement} cell\r\n */\r\nexport async function generateThumb(handle, cell) {\r\n  const file = await handle.getFile();\r\n  const size = parseInt(getComputedStyle(cell).getPropertyValue('--thumb'));\r\n  const url = URL.createObjectURL(file);\r\n  const probe = document.createElement('video');\r\n  const canPlay = probe.canPlayType(file.type) !== '';\r\n\r\n  if (file.type.startsWith('video/') && canPlay) {\r\n    probe.preload = 'metadata';\r\n    probe.muted = true;\r\n    probe.src = url;\r\n    probe.currentTime = 0.5;\r\n    probe.onseeked = async () => {\r\n      const bm = await createImageBitmap(probe, { resizeWidth: size, resizeHeight: size, resizeQuality: 'high' });\r\n      const cnv = document.createElement('canvas');\r\n      cnv.width = cnv.height = size;\r\n      cnv.getContext('2d').drawImage(bm, 0, 0);\r\n      const img = document.createElement('img');\r\n      img.src = cnv.toDataURL('image/jpeg', 0.75);\r\n      cell.replaceChild(img, cell.querySelector('.icon'));\r\n    };\r\n  } else if (file.type.startsWith('image/')) {\r\n    const img = new Image();\r\n    img.src = url;\r\n    img.onload = async () => {\r\n      const bm = await createImageBitmap(img, { resizeWidth: size, resizeHeight: size, resizeQuality: 'high' });\r\n      const cnv = document.createElement('canvas');\r\n      cnv.width = cnv.height = size;\r\n      cnv.getContext('2d').drawImage(bm, 0, 0);\r\n      const thumb = document.createElement('img');\r\n      thumb.src = cnv.toDataURL('image/jpeg', 0.75);\r\n      cell.replaceChild(thumb, cell.querySelector('.icon'));\r\n    };\r\n  } else if (file.type.startsWith('video/')) {\r\n    const icon = document.createElement('div');\r\n    icon.className = 'icon';\r\n    icon.textContent = '🎥';\r\n    cell.replaceChild(icon, cell.querySelector('.icon'));\r\n  } else {\r\n    const icon = document.createElement('div');\r\n    icon.className = 'icon';\r\n    icon.textContent = '📄';\r\n    cell.replaceChild(icon, cell.querySelector('.icon'));\r\n  }\r\n}\r\n","// src/main.js\r\n\r\nimport { openHandleDB, saveLastHandle, getLastHandle } from './storage.js';\r\nimport { walkRoot, walkRecursive } from './dir-walk.js';\r\nimport { initObserver, applyFilters, resetGrid, loadMore, generateThumb } from './grid-renderer.js';\r\nimport { loadAlbums, renderAlbums } from './sidebar.js';\r\nimport { showMetadata } from './metadata.js';\r\nimport { IMAGE_EXTS, VIDEO_EXTS } from './utils.js';\r\n\r\n// DOM references\r\nconst pickBtn     = document.getElementById('pickBtn');\r\nconst refreshBtn  = document.getElementById('refreshBtn');\r\nconst searchInput = document.getElementById('searchInput');\r\nconst mediaFilter = document.getElementById('mediaFilter');\r\nconst sortSelect  = document.getElementById('sortSelect');\r\nconst includeSub  = document.getElementById('includeSub');\r\nconst thumbGrid   = document.getElementById('thumbGrid');\r\nconst tree        = document.getElementById('tree');\r\nconst addAlbum    = document.getElementById('addCat');\r\nconst navRoot     = document.querySelector('.nav-item[data-type=\"root\"]');\r\nconst breadcrumb  = document.getElementById('breadcrumb');\r\nconst metaModal   = document.getElementById('metaModal');\r\nconst metaClose   = metaModal.querySelector('.close');\r\n\r\nlet rootDir, currentHandle;\r\nlet allFiles = [];\r\n\r\n// 1) Initialize the lazy-load observer\r\ninitObserver(thumbGrid, generateThumb);\r\n\r\n// 2) Infinite scroll\r\nthumbGrid.addEventListener('scroll', () => {\r\n  if (thumbGrid.scrollTop + thumbGrid.clientHeight >= thumbGrid.scrollHeight - 100) {\r\n    loadMore(thumbGrid);\r\n  }\r\n});\r\n\r\n// 3) Navigation highlight\r\nfunction setActiveNav(el) {\r\n  document.querySelectorAll('.nav-item, .group').forEach(x => x.classList.remove('active'));\r\n  el.classList.add('active');\r\n}\r\n\r\n// 4) Breadcrumb update\r\nfunction updateBreadcrumb(cat, grp) {\r\n  breadcrumb.textContent = !cat\r\n    ? 'Home'\r\n    : !grp\r\n      ? `Home / ${cat}`\r\n      : `Home / ${cat} / ${grp}`;\r\n}\r\n\r\n// 5) Load & render files\r\nasync function loadRootFiles() {\r\n  allFiles = includeSub.checked\r\n    ? await walkRecursive(currentHandle)\r\n    : await walkRoot(currentHandle);\r\n\r\n  resetGrid(\r\n    thumbGrid,\r\n    allFiles,\r\n    searchInput.value,\r\n    mediaFilter.value,\r\n    sortSelect.value\r\n  );\r\n\r\n  updateBreadcrumb();\r\n  refreshBtn.disabled = false;\r\n}\r\n\r\n// 6) Sidebar initializer\r\nasync function initSidebar() {\r\n  const albums = await loadAlbums(rootDir);\r\n  renderAlbums(tree, albums,\r\n    // onGroupClick\r\n    async (albumHandle, groupName, navEl) => {\r\n      setActiveNav(navEl);\r\n      currentHandle = await albumHandle.getDirectoryHandle(groupName);\r\n      updateBreadcrumb(albumHandle.name, groupName);\r\n      await loadRootFiles();\r\n    },\r\n    // onGroupDrop\r\n    async (eOrSignal, albumHandle, groupName) => {\r\n      if (eOrSignal === 'reload') {\r\n        await initSidebar();\r\n        return;\r\n      }\r\n      const names = JSON.parse(eOrSignal.dataTransfer.getData('application/json'));\r\n      let moved = 0, failed = 0;\r\n      for (let nm of names) {\r\n        try {\r\n          const entry = allFiles.find(x => x.name === nm);\r\n          const blob = await entry.handle.getFile();\r\n          const targetDir = await albumHandle.getDirectoryHandle(groupName, { create: true });\r\n          const dest = await targetDir.getFileHandle(nm, { create: true });\r\n          const w = await dest.createWritable(); await w.write(blob); await w.close();\r\n          await currentHandle.removeEntry(nm);\r\n          moved++;\r\n        } catch {\r\n          failed++;\r\n        }\r\n      }\r\n      alert(`Moved ${moved} file${moved!==1?'s':''}${failed?`, ${failed} failed`:''}.`);\r\n      await loadRootFiles();\r\n    }\r\n  );\r\n}\r\n\r\n// 7) Pick folder\r\npickBtn.addEventListener('click', async () => {\r\n  rootDir = await window.showDirectoryPicker();\r\n  await saveLastHandle(rootDir);\r\n  currentHandle = rootDir;\r\n  await loadRootFiles();\r\n  await initSidebar();\r\n  setActiveNav(navRoot);\r\n});\r\n\r\n// 8) Add album\r\naddAlbum.addEventListener('click', async () => {\r\n  const name = prompt('New Album:');\r\n  if (!name) return;\r\n  await rootDir.getDirectoryHandle(name, { create: true });\r\n  await initSidebar();\r\n});\r\n\r\n// 9) Filters & controls\r\nrefreshBtn.addEventListener('click', loadRootFiles);\r\nsearchInput.addEventListener('input', loadRootFiles);\r\nmediaFilter.addEventListener('change', loadRootFiles);\r\nsortSelect.addEventListener('change', loadRootFiles);\r\nincludeSub.addEventListener('change', () => {\r\n  loadRootFiles();\r\n});\r\n\r\n// 10) Delegate metadata button clicks\r\nthumbGrid.addEventListener('click', e => {\r\n  if (e.target.matches('.thumb .actions button[title=\"Metadata\"]')) {\r\n    // Find corresponding file entry\r\n    const cell = e.target.closest('.thumb');\r\n    const entry = allFiles.find(f => f.name === cell._filename);\r\n    showMetadata(entry, metaModal);\r\n  }\r\n});\r\n\r\n// 11) Close metadata modal\r\nmetaClose.addEventListener('click', () => {\r\n  metaModal.style.display = 'none';\r\n});\r\n\r\n// 12) Initialization on load\r\nwindow.addEventListener('load', async () => {\r\n  const last = await getLastHandle();\r\n  if (last) {\r\n    rootDir = last;\r\n  } else {\r\n    rootDir = await window.showDirectoryPicker({ startIn: 'downloads' });\r\n    await saveLastHandle(rootDir);\r\n  }\r\n  currentHandle = rootDir;\r\n\r\n  await loadRootFiles();\r\n  await initSidebar();\r\n  setActiveNav(navRoot);\r\n});\r\n","// src/sidebar.js\r\n\r\n/**\r\n * Scan the root directory for “Albums” (directories) and their sub-“Groups”.\r\n * @param {FileSystemDirectoryHandle} rootDir\r\n * @returns {Promise<Array<{ name: string, handle: FileSystemDirectoryHandle, groups: string[] }>>}\r\n */\r\nexport async function loadAlbums(rootDir) {\r\n  const albums = [];\r\n  for await (let [name, handle] of rootDir) {\r\n    if (handle.kind === 'directory') {\r\n      // For each album, collect its group names (subdirectories only)\r\n      const groups = [];\r\n      for await (let [gName, gHandle] of handle) {\r\n        if (gHandle.kind === 'directory') {\r\n          groups.push(gName);\r\n        }\r\n      }\r\n      albums.push({ name, handle, groups });\r\n    }\r\n  }\r\n  return albums;\r\n}\r\n\r\n/**\r\n * Render the albums/categories and their groups into the sidebar container.\r\n * @param {HTMLElement} treeContainer  The <div id=\"tree\"> element.\r\n * @param {Array} albumsData           The array returned from loadAlbums().\r\n * @param {Function} onGroupClick      Callback(groupName, albumHandle, groupName) for navigation clicks.\r\n * @param {Function} onGroupDrop       Callback(event, albumHandle, groupName) for dropped files.\r\n */\r\nexport function renderAlbums(treeContainer, albumsData, onGroupClick, onGroupDrop) {\r\n  treeContainer.innerHTML = '';\r\n  albumsData.forEach(album => {\r\n    // Category wrapper\r\n    const categoryDiv = document.createElement('div');\r\n    categoryDiv.className = 'category';\r\n\r\n    // Header with album name + “+” button\r\n    const header = document.createElement('div');\r\n    header.className = 'cat-header';\r\n    header.textContent = album.name;\r\n    const addBtn = document.createElement('button');\r\n    addBtn.textContent = '➕';\r\n    addBtn.addEventListener('click', async () => {\r\n      const newGroup = prompt('New Group:');\r\n      if (!newGroup) return;\r\n      await album.handle.getDirectoryHandle(newGroup, { create: true });\r\n      onGroupDrop('reload');  // signal to reload albums\r\n    });\r\n    header.appendChild(addBtn);\r\n    categoryDiv.appendChild(header);\r\n\r\n    // Each group listing\r\n    album.groups.forEach(groupName => {\r\n      const grpDiv = document.createElement('div');\r\n      grpDiv.className = 'group';\r\n      grpDiv.textContent = groupName;\r\n\r\n      // Navigation click\r\n      grpDiv.addEventListener('click', () => {\r\n        onGroupClick(album.handle, groupName);\r\n      });\r\n\r\n      // Drag-over styling\r\n      grpDiv.addEventListener('dragover', e => {\r\n        e.preventDefault();\r\n        grpDiv.classList.add('dragover');\r\n      });\r\n      grpDiv.addEventListener('dragleave', () => {\r\n        grpDiv.classList.remove('dragover');\r\n      });\r\n\r\n      // Drop handling: move selected files into this group\r\n      grpDiv.addEventListener('drop', e => {\r\n        e.preventDefault();\r\n        grpDiv.classList.remove('dragover');\r\n        onGroupDrop(e, album.handle, groupName);\r\n      });\r\n\r\n      categoryDiv.appendChild(grpDiv);\r\n    });\r\n\r\n    treeContainer.appendChild(categoryDiv);\r\n  });\r\n}\r\n","// src/metadata.js\r\n\r\n/**\r\n * Display metadata for a given file entry in a modal.\r\n * Supports images via EXIF and videos via built-in metadata.\r\n * @param {{ name: string, handle: FileSystemFileHandle }} fileEntry\r\n * @param {HTMLElement} modalElement The modal container (#metaModal)\r\n */\r\nexport async function showMetadata(fileEntry, modalElement) {\r\n  const { name, handle } = fileEntry;\r\n  const file = await handle.getFile();\r\n  let tags = {};\r\n\r\n  // Extract EXIF tags for images\r\n  if (file.type.startsWith('image/') && window.EXIF) {\r\n    await new Promise(resolve => {\r\n      EXIF.getData(file, function() {\r\n        tags = EXIF.getAllTags(this);\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  // Build ordered metadata\r\n  const data = {};\r\n  data['File Name'] = name;\r\n  // Original date from EXIF if available\r\n  if (tags.DateTimeOriginal) {\r\n    data['Original Date'] = tags.DateTimeOriginal;\r\n  }\r\n  // Camera make/model if available\r\n  if (tags.Make || tags.Model) {\r\n    data['Camera'] = [tags.Make, tags.Model].filter(Boolean).join(' ');\r\n  }\r\n  // Video metadata or fallback\r\n  if (file.type.startsWith('video/')) {\r\n    const url = URL.createObjectURL(file);\r\n    const vid = document.createElement('video');\r\n    vid.preload = 'metadata';\r\n    vid.src = url;\r\n    await new Promise(resolve => {\r\n      vid.onloadedmetadata = () => {\r\n        data['Duration'] = `${vid.duration.toFixed(2)} s`;\r\n        data['Width'] = vid.videoWidth;\r\n        data['Height'] = vid.videoHeight;\r\n        resolve();\r\n      };\r\n    });\r\n  }\r\n\r\n  // Common fields\r\n  data['Size'] = `${file.size} bytes`;\r\n  data['Type'] = file.type;\r\n  data['Last Modified'] = new Date(file.lastModified).toLocaleString();\r\n\r\n  renderMetaModal(data, modalElement);\r\n}\r\n"],"names":["async","openHandleDB","Promise","resolve","reject","req","indexedDB","open","onupgradeneeded","result","createObjectStore","onsuccess","onerror","error","saveLastHandle","handle","tx","transaction","objectStore","put","oncomplete","walkRecursive","dir","arr","name","kind","file","getFile","push","date","lastModified","IMAGE_EXTS","VIDEO_EXTS","observer","loaded","displayed","resetGrid","container","allFiles","searchQuery","mediaFilterValue","sortValue","innerHTML","list","q","trim","toLowerCase","filter","f","includes","ext","slice","lastIndexOf","sort","a","b","localeCompare","applyFilters","loadMore","cell","document","createElement","className","_handle","_filename","ph","textContent","appendChild","lbl","observe","length","pickBtn","getElementById","refreshBtn","searchInput","mediaFilter","sortSelect","includeSub","thumbGrid","tree","addAlbum","navRoot","querySelector","breadcrumb","metaModal","metaClose","rootDir","currentHandle","generateThumbFn","setActiveNav","el","querySelectorAll","forEach","x","classList","remove","add","updateBreadcrumb","cat","grp","loadRootFiles","checked","walkRoot","value","disabled","initSidebar","albums","groups","gName","gHandle","loadAlbums","treeContainer","albumsData","onGroupClick","onGroupDrop","albumHandle","groupName","navEl","getDirectoryHandle","eOrSignal","names","JSON","parse","dataTransfer","getData","moved","failed","nm","entry","find","blob","targetDir","create","dest","getFileHandle","w","createWritable","write","close","removeEntry","alert","album","categoryDiv","header","addBtn","addEventListener","newGroup","prompt","grpDiv","e","preventDefault","size","parseInt","getComputedStyle","getPropertyValue","url","URL","createObjectURL","probe","canPlay","canPlayType","type","startsWith","preload","muted","src","currentTime","onseeked","bm","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","cnv","width","height","getContext","drawImage","img","toDataURL","replaceChild","Image","onload","thumb","icon","IntersectionObserver","entries","isIntersecting","target","_loaded","unobserve","root","rootMargin","scrollTop","clientHeight","scrollHeight","window","showDirectoryPicker","matches","closest","fileEntry","modalElement","tags","EXIF","getAllTags","this","data","DateTimeOriginal","Make","Model","Boolean","join","vid","onloadedmetadata","duration","toFixed","videoWidth","videoHeight","Date","toLocaleString","renderMetaModal","showMetadata","style","display","last","get","getLastHandle","startIn"],"mappings":"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"}